name: No persistent for global env vars
# This example demonstrates the following topics:
# 1. There is no persistence of env variables between steps in the same job
# 2. There is no persistence of env variables between steps
# 3. You can use $Env:GITHUB_ENV to persist between steps of the same job but not between jobs
env:
  V1: 0
  V2: 0
  V3: 0
  
on: [workflow_dispatch]

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: step 1 - assign
        shell: pwsh
        env:
          localv1: 'Hello, World'
        run: |
          $Env:V1 = 1
          $Env:V2 = 2
          $Env:V3 = 3
          Write-Host "v1= " $Env:V1
          Write-Host "v2= " $Env:V2
          Write-Host "v3= " $Env:V3
          Write-Host "The assignment of values to the 3 global env vars won't persist in the next step/ job"
          Write-Host "localv1= " $Env:localv1
      - name: step 2 - same job initialize
        shell: pwsh
        env:
          localv2: 'Hello, you'
        run: |
          Write-Host "Use env vars from another step of the same job"
          Write-Host "The values of the 3 global env vars assigned in the previous step don't persist in this step"
          Write-Host "v1= "  $Env:V1
          Write-Host "v2= "  $Env:V1
          Write-Host "v3= "  $Env:V1
          Write-Host "localv2= " $Env:localv2
  job2:
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: read
        shell: pwsh
        run: |
          Write-Host "Use env vars from another job"
          Write-Host "v1= "  $Env:V1
          Write-Host "v2= "  $Env:V1
          Write-Host "v3= "  $Env:V1
          Write-Host "The values of the 3 global env vars assigned in the previous job don't persist in this job"
          echo "V4=999" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append  
          Write-Host "V4 was set to: " $Env:V4
          Get-Content -Path $Env:GITHUB_ENV
      - name: Use the value
        id: step_two
        run: |
          echo "Use env variable defined in the previous step in job2"
          echo "Output env var V4 set in the previous step of Job2- V4 is:  "
          echo "${{ env.V4 }}" # This will output '999'
          echo "The output of cat $GITHUB_ENV is:   "
          cat $GITHUB_ENV
          echo "The output of cat ${{ GITHUB_ENV }} is:   "
          cat ${{ GITHUB_ENV }}
          echo "The output of cat ${{ env.GITHUB_ENV }} is:   "
          cat ${{ env.GITHUB_ENV }}
          
